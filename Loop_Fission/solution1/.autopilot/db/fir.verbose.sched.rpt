

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Wed Dec 13 19:44:16 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Loop_Fission
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   33|   33|   33|   33|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   10|   10|         2|          -|          -|     5|    no    |
        |- Loop 2  |   20|   20|         4|          -|          -|     5|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 8 
5 --> 6 
6 --> 7 
7 --> 4 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %output_r) nounwind, !map !7"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %input_r) nounwind, !map !13"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 11 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%input_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %input_r) nounwind" [Loop_Fission/top.cpp:9]   --->   Operation 12 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %1" [Loop_Fission/top.cpp:17]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.97>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ -3, %0 ], [ %i, %2 ]"   --->   Operation 14 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.13ns)   --->   "%icmp_ln17 = icmp eq i3 %i_0, 0" [Loop_Fission/top.cpp:17]   --->   Operation 15 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln17, label %3, label %2" [Loop_Fission/top.cpp:17]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, -1" [Loop_Fission/top.cpp:19]   --->   Operation 18 'add' 'i' <Predicate = (!icmp_ln17)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i3 %i to i64" [Loop_Fission/top.cpp:19]   --->   Operation 19 'zext' 'zext_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr inbounds [6 x i32]* @shift_reg, i64 0, i64 %zext_ln19" [Loop_Fission/top.cpp:19]   --->   Operation 20 'getelementptr' 'shift_reg_addr' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 21 [2/2] (2.32ns)   --->   "%shift_reg_load = load i32* %shift_reg_addr, align 4" [Loop_Fission/top.cpp:19]   --->   Operation 21 'load' 'shift_reg_load' <Predicate = (!icmp_ln17)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 22 [1/1] (2.32ns)   --->   "store i32 %input_read, i32* getelementptr inbounds ([6 x i32]* @shift_reg, i64 0, i64 0), align 16" [Loop_Fission/top.cpp:22]   --->   Operation 22 'store' <Predicate = (icmp_ln17)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 23 [1/1] (1.76ns)   --->   "br label %4" [Loop_Fission/top.cpp:26]   --->   Operation 23 'br' <Predicate = (icmp_ln17)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 4.64>
ST_3 : Operation 24 [1/2] (2.32ns)   --->   "%shift_reg_load = load i32* %shift_reg_addr, align 4" [Loop_Fission/top.cpp:19]   --->   Operation 24 'load' 'shift_reg_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln19_1 = zext i3 %i_0 to i64" [Loop_Fission/top.cpp:19]   --->   Operation 25 'zext' 'zext_ln19_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr inbounds [6 x i32]* @shift_reg, i64 0, i64 %zext_ln19_1" [Loop_Fission/top.cpp:19]   --->   Operation 26 'getelementptr' 'shift_reg_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (2.32ns)   --->   "store i32 %shift_reg_load, i32* %shift_reg_addr_1, align 4" [Loop_Fission/top.cpp:19]   --->   Operation 27 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br label %1" [Loop_Fission/top.cpp:17]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 8.51>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%acc_0 = phi i32 [ 0, %3 ], [ %acc, %5 ]"   --->   Operation 29 'phi' 'acc_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%i1_0 = phi i3 [ -3, %3 ], [ %i_1, %5 ]"   --->   Operation 30 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (1.13ns)   --->   "%icmp_ln26 = icmp eq i3 %i1_0, 0" [Loop_Fission/top.cpp:26]   --->   Operation 31 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 32 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %icmp_ln26, label %6, label %5" [Loop_Fission/top.cpp:26]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i3 %i1_0 to i64" [Loop_Fission/top.cpp:28]   --->   Operation 34 'zext' 'zext_ln28' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%shift_reg_addr_2 = getelementptr inbounds [6 x i32]* @shift_reg, i64 0, i64 %zext_ln28" [Loop_Fission/top.cpp:28]   --->   Operation 35 'getelementptr' 'shift_reg_addr_2' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 36 [2/2] (2.32ns)   --->   "%shift_reg_load_1 = load i32* %shift_reg_addr_2, align 4" [Loop_Fission/top.cpp:28]   --->   Operation 36 'load' 'shift_reg_load_1' <Predicate = (!icmp_ln26)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%c1_addr = getelementptr [6 x i10]* @c1, i64 0, i64 %zext_ln28" [Loop_Fission/top.cpp:28]   --->   Operation 37 'getelementptr' 'c1_addr' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 38 [2/2] (3.25ns)   --->   "%c1_load = load i10* %c1_addr, align 2" [Loop_Fission/top.cpp:28]   --->   Operation 38 'load' 'c1_load' <Predicate = (!icmp_ln26)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 6> <ROM>
ST_4 : Operation 39 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i1_0, -1" [Loop_Fission/top.cpp:26]   --->   Operation 39 'add' 'i_1' <Predicate = (!icmp_ln26)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (8.51ns)   --->   "%mul_ln31 = mul nsw i32 %input_read, 53" [Loop_Fission/top.cpp:31]   --->   Operation 40 'mul' 'mul_ln31' <Predicate = (icmp_ln26)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (2.32ns)   --->   "store i32 %input_read, i32* getelementptr inbounds ([6 x i32]* @shift_reg, i64 0, i64 0), align 16" [Loop_Fission/top.cpp:32]   --->   Operation 41 'store' <Predicate = (icmp_ln26)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 5 <SV = 3> <Delay = 3.25>
ST_5 : Operation 42 [1/2] (2.32ns)   --->   "%shift_reg_load_1 = load i32* %shift_reg_addr_2, align 4" [Loop_Fission/top.cpp:28]   --->   Operation 42 'load' 'shift_reg_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_5 : Operation 43 [1/2] (3.25ns)   --->   "%c1_load = load i10* %c1_addr, align 2" [Loop_Fission/top.cpp:28]   --->   Operation 43 'load' 'c1_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 6> <ROM>

State 6 <SV = 4> <Delay = 8.51>
ST_6 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln28 = sext i10 %c1_load to i32" [Loop_Fission/top.cpp:28]   --->   Operation 44 'sext' 'sext_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 45 [1/1] (8.51ns)   --->   "%mul_ln28 = mul nsw i32 %shift_reg_load_1, %sext_ln28" [Loop_Fission/top.cpp:28]   --->   Operation 45 'mul' 'mul_ln28' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 5> <Delay = 2.55>
ST_7 : Operation 46 [1/1] (2.55ns)   --->   "%acc = add nsw i32 %mul_ln28, %acc_0" [Loop_Fission/top.cpp:28]   --->   Operation 46 'add' 'acc' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 47 [1/1] (0.00ns)   --->   "br label %4" [Loop_Fission/top.cpp:26]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 2.55>
ST_8 : Operation 48 [1/1] (2.55ns)   --->   "%acc_1 = add nsw i32 %acc_0, %mul_ln31" [Loop_Fission/top.cpp:31]   --->   Operation 48 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %output_r, i32 %acc_1) nounwind" [Loop_Fission/top.cpp:34]   --->   Operation 49 'write' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "ret void" [Loop_Fission/top.cpp:35]   --->   Operation 50 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', Loop_Fission/top.cpp:19) [11]  (1.77 ns)

 <State 2>: 3.97ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Loop_Fission/top.cpp:19) [11]  (0 ns)
	'add' operation ('i', Loop_Fission/top.cpp:19) [16]  (1.65 ns)
	'getelementptr' operation ('shift_reg_addr', Loop_Fission/top.cpp:19) [18]  (0 ns)
	'load' operation ('shift_reg_load', Loop_Fission/top.cpp:19) on array 'shift_reg' [19]  (2.32 ns)

 <State 3>: 4.64ns
The critical path consists of the following:
	'load' operation ('shift_reg_load', Loop_Fission/top.cpp:19) on array 'shift_reg' [19]  (2.32 ns)
	'store' operation ('store_ln19', Loop_Fission/top.cpp:19) of variable 'shift_reg_load', Loop_Fission/top.cpp:19 on array 'shift_reg' [22]  (2.32 ns)

 <State 4>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln31', Loop_Fission/top.cpp:31) [45]  (8.51 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('c1_load', Loop_Fission/top.cpp:28) on array 'c1' [38]  (3.25 ns)

 <State 6>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln28', Loop_Fission/top.cpp:28) [40]  (8.51 ns)

 <State 7>: 2.55ns
The critical path consists of the following:
	'add' operation ('acc', Loop_Fission/top.cpp:28) [41]  (2.55 ns)

 <State 8>: 2.55ns
The critical path consists of the following:
	'add' operation ('acc', Loop_Fission/top.cpp:31) [46]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
